trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
- group: 'Axinom NuGet API keys'
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: 'buildConfiguration'
  value: 'Release'
- name: 'Tooling'
  value: '$(Build.SourcesDirectory)/Resources/DeliveryProcess.Tooling'

steps:
- task: PowerShell@2
  displayName: 'Replace NuGet tokens'
  inputs:
    filePath: '$(Tooling)/Replace-Tokens.ps1'
    arguments: '-path "$(Build.SourcesDirectory)/Resources/AutomatedBuild/nuget.config" -secrets "AxNuget_ReadKey=$(AxNuget.ReadKey)","AxNugetCb_ReadKey=$(AxNugetCb.ReadKey)"'

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.5.0'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: 'config'
    nugetConfigPath: 'Resources/AutomatedBuild/nuget.config'

- task: PowerShell@2
  displayName: 'Update version string'
  inputs:
    filePath: '$(Tooling)/Set-BuildAndVersionStrings.ps1'
    arguments: '-assemblyInfoPath "$(Build.SourcesDirectory)/Resources/SolutionAssemblyInfo.cs" -buildId "$(Build.BuildId)" -commitId "$(Build.SourceVersion)"'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Run tests with .NET Framework'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testAssemblyVer2: 'Tests.NetFramework/bin/$(BuildConfiguration)/Tests.*.dll'

- task: CmdLine@2
  displayName: 'Run tests with .NET Core'
  condition: always()
  inputs:
    script: '"c:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/Extensions/TestPlatform/vstest.console.exe" "$(Build.SourcesDirectory)/Tests.NetCore/bin/Release/netcoreapp2.2/Tests.NetCore.dll" /Framework:FrameworkCore10'

- task: PowerShell@2
  displayName: 'Attach test log (.NET Framework)'
  condition: always()
  inputs:
    targetType: 'inline'
    script: |
      $logPath = [System.IO.Path]::Combine($env:BUILD_SOURCESDIRECTORY, "Tests.NetFramework", "bin", "Release", "Tests.log")
      if (Test-Path $logPath) {
          Write-Host "##vso[build.uploadlog]$logPath"
      }

- task: PowerShell@2
  displayName: 'Attach test log (.NET Core)'
  condition: always()
  inputs:
    targetType: 'inline'
    script: |
      $logPath = [System.IO.Path]::Combine($env:BUILD_SOURCESDIRECTORY, "Tests.NetCore", "bin", "Release", "netcoreapp2.0", "Tests.log")
      if (Test-Path $logPath) {
          Write-Host "##vso[build.uploadlog]$logPath"
      }

