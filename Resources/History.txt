10.0.2
	* Helpers.Filesystem.GetBinDirectory() now also works for web apps.

10.0.0
	* Targeting .NET Standard 2.0 with primary library. This moved a fair amount of types around, beware!
	* Axinom.Toolkit.DotNet assembly renamed to Axinom.Toolkit.NetFramework to better reflect its platform.
	* Removed some super obsolete stuff not used in 5 years. Most things survived the porting (NS 2.0 is pretty good).
	* Added changelog to documentation website.
	* Helpers.Async.BackgroundThreadInvoke() now returns a Task for the created operation.
	* Helpers.Argument.ValidateIsNotNullOrEmpty() supports more types of collections.
	* Helpers.Debug.ToDebugString() now reports correct length for collections that contain more than 64 items.
	* Added Helpers.Filesystem.GetBinDirectory().

9.3.2
	* Fixed race-condition in fast-exiting ExternalTool.

9.3.1
	* Removed extraneous newlines from GetAllExceptionMessages.

9.3.0
	* Added Helpers.Debug.GetAllExceptionMessages to dump all messages of exceptions, including inner exceptions.

9.2.2
	* Censored strings for ExternalTool that are empty are now ignored.

9.2.0
	* ExternalTool now supports censoring sensitive command line arguments.

9.1.0
	* SemaphoreLock now has overloads with CancellationToken.
	* Added DelegatingLogListener.
	* Added Helpers.Timeout.GetCancellationToken() for easy creation of finite cancellation tokens.
	* Logging API now accepts FormattableString to help with potential future optimization.

9.0.0
	* .NET Standard DOES NOT WORK. Exterminated!

8.0.0
	* Now targeting .NET Standard 1.4 + .NET Framework 4.6.2 + UWP 10240.
	* Updated dependencies.
	* Renamed Core -> NetStandard.
	* Removed xunit console runner from use in development environment. It had issues with UWP. Not worth the effort.

7.1.2
	* Removed misleading commentary about SDK versions. We target 10240, that's it.

7.1.1
	* Fixed defect in PlayReadyLicenseAcquirer that caused reactive PlayReady activation to fail.

7.1.0
	* Added base64url to/from conversion helpers.
	* Added ProtectedXml helpers. You can now encrypt&sign and verify&decrypt XmlDocuments with a one-liner helper method. DotNet only, for now.
	* Added Jose helpers. You can now encrypt&sign and verify&decrypt arbitrary data packaged into JOSE objects with a one-liner helper method. DotNet only, for now. Uses jose-jwt underneath.

7.0.0
	* ErrorReport.Send() replaced with ErrorReport.Log(). The error reports are now written to the logging system instead of sent via email and event log. You are still able to accomplish the latter but you must use an appropriate log listener to do the actual delivery. This significantly simplifies the implementation and maintenace of ErrorReport.
	* ErrorReport contents rewritten to include less irrelevant spam. Some edge cases may no longer be supported. Scream if some important info is missing and it will likely be added to the next version.
	* Added Task.WithAbandonment() extension method, to abandon tasks.
	* Added timeout-enabled overload for HttpResponseMessage.EnsureSuccessStatusCodeAndReportFailureDetailsAsync().
	* UWP target platform upgraded to 10586 (minimum remains at 10240).
	* Updated UWP and NLog NuGet package dependencies.

6.9.0
	* ExternalTool now reports part of any error output in its exception message when an external tool failure is detected, for ease of diagnostics.

6.8.0
	* Added DASH support to Helpers.Media.GetKeyIds().

6.7.0
	* Added PlayReadyLicenseAcquirer class, which enables UWP apps to support PlayReady without the need for Microsoft Player Framework.
	* Refactored PlayReady client code to use PlayReadyClientConfiguration class instead of stand-alone arguments for configuring the client behavior.
	* Added capability for adding custom HTTP request headers to PlayReady client requests.
	* Helpers.Random.GetRandomItem() can now also work with read-only lists.

6.6.0
	* Moved Helpers.XmlSerialization from DotNet to Core.

6.5.0
	* Added Helpers.Media.CreatePsshBox() for easy generation of ISO Base Media File Format compatible PSSH boxes.
	* Added Helpers.Widevine.GenerateWidevineCencHeader() for easy generation of a Widevine CENC header.

6.4.0
	* Added Helpers.Certificate.CleanWindowsThumbprint() for cleaning the certificate thumbprint values from the Windows GUI.
	* Helpers.Debug.ToDebugString() now attempts to prevent recursion with static struct fields like IntPtr.Zero.

6.3.0
	* Optimized Helpers.Media.Crop to be more faithful to aspect ratio while avoiding needless cropping.

6.2.0
	* Added Helpers.Media.GetKeyIds() and related Helpers.PlayReady methods.

6.1.0
	* Added support for automatic domain joining when acquiring PlayReady licenses.
	* Added Helpers.PlayReady.FulfillServiceRequest().

6.0.0 - Axinom Toolkit is now compatible with .NET 4.6 and UWP 10.0.
	* Created assembly Core that houses portable classes.
	* Services.Client package merged into Core assembly and NuGet package marked obsolete.
	* Refactored helper method access patterns from FilesystemHelper.DoWhatever() to Helpers.Filesystem.DoEhatever() to better facilitate multi-framework library composition using extension methods.
	* Removed thread information from logging system log entries, since it was not portable.
	* Helpers.Async.BackgroundThreadInvoke() now uses Task instead of explicitly using Thread, for enhanced portability.
	* AsyncHelper.WaitSafe() had confusing naming, now renamed to just .WaitAndUnwrapExceptions() extension method - nothing particularly safe about it, we just unwarp the exceptions from AggregrateException and that's it.
	* Added more async helper methods that become relevant with async programming.
	* Added DurationLogger, DebugLogListener, StreamWriterLogListener.
	* Helpers.Argument.ValidateLength now takes any collection, not just array.
	* Added Uwp library for UWP specific features, starting out with FixedAspectRatioBox and an assortment of converters.
	* RandomText renamed to Helpers.Random and added various more random data retrieval methods.
	* WeakEventListener now supports IDispose for easy detaching.
	* Added Helpers.PlayReady.GenerateRightsManagementHeader() and Helpers.PlayReady.EnsureActivatedAsync() (UWP).
	* Added ExtensionsForObservableCollection.WeakObserve().
	* Added Helpers.Network.IsInternetAvailable() (UWP).
	* Added Helpers.PlayReady.AcquireLicenseAsync() (UWP).
	* Added ExtensionsForIAsyncAction and ExtensionsForIAsyncOperation (UWP).
	* Added Helpers.Filesystem.GetFreeSpace() (UWP).
	* Added Helpers.PlayReady.IsPersistentLicensePresent() (UWP).
	* Added ExtensionsForUwpHttpResponseMessage to target the UWP version of HttpClient with the same feature set as .NET.
	* Added ExtensionsForIRandomAccessStream (UWP) to easily clear streams (got to remember to seek!).